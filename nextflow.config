manifest {
    mainScript = 'main.nf'
    nextflowVersion = '>=20.01.0'
}
params {
    max_cores = 3 //Runtime.runtime.availableProcessors()
    cores = "2"
    max_memory = 50.GB
    memory = 8.GB
    memory_multiplier = 1

    profile = false
    help = false

    // input
    genus = ''
    se_reads = ''
    pe_reads = ''
    reference_genome = ''
    reference_annotation = '' // needs reference_genome

    fastp_additional_params = '-5 -3 -W 4 -M 20 -l 15 -x -n 5 -z 6'
    hisat2_additional_params = ''
    genetic_code = '4'
    skip_blast = false
    skip_soap = false

    contig_len_filter = 8000 // 10000
    contig_high_read_cov_filter = true

    // folder structure
    output = 'results'

    fastqc_dir = '0-P1-fastqc'
    fastp_dir = '0-P2-fastp'

    kmergenie_dir = '1-A1-kmergenie'
    soapdenovo2_dir = '1-A2-soapdenovo2'
    spades_dir = '1-A3-spades'
    quast_dir = '1-A4-quast'

    hisat2_dir = '2-F1-hisat2'
    mmseqs2_dir = '2-F2-mmseqs2'
    blast_dir = '2-F3-blast'
    features_dir = '2-F4-features'

    mtContigs_dir = '3-M1-mtContigs'
    mitos_dir = '3-M2-mitos'

    multiqc_dir = 'MultiQC'


    // location for storing the conda environments
    condaCacheDir = 'conda'

    // softlink results instead of copying
    softlink_results = false
}

// report {
//   enabled = true
//   file = "execution_report.html"
// }

profiles {
    ////////////////////////////////////////////////////
    // executors

    local {
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.max_memory
        }
        includeConfig 'configs/local.config'
    }

    ////////////////////////////////////////////////////
    // engines

    conda {
        conda{
            cacheDir = params.condaCacheDir
            createTimeout = '45 min'
            useMamba = true
        }
        includeConfig 'configs/conda.config'
    }

    // local execution with conda
    standard {
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.max_memory
        }
        conda { cacheDir = params.condaCacheDir }
        includeConfig 'configs/local.config'
        includeConfig 'configs/conda.config'
    }

    // ARA specific profile
    ara {
        params.max_memory = 1000.GB
        conda { cacheDir = "/beegfs/rna-hta/$USER/mt-conda-cache" }
        process {
            clusterOptions = '--partition=s_standard,s_fat,b_standard,b_fat'
            withLabel: smallTask { executor = 'local' }
        }
        executor {
            name = "slurm"
            queueSize = 10
        }        
        process.cache = "lenient"
        includeConfig 'configs/nodes.config'
        includeConfig 'configs/conda.config' }
}
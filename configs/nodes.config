process {   
    withLabel: fastqc { cpus = 2; memory = { (30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (30.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' } }
    withLabel: fastp { cpus = 24; memory = { (30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (30.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' } }
    withLabel: python { cpus = 1; memory = { (8.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((8.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (8.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' } }
    withLabel: spades { cpus = 24; memory = { (40.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((40.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (40.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 1 ? 'retry' : 'terminate' } }
    withLabel: kmergenie { cpus = 24; memory = { (30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (30.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 1 ? 'retry' : 'terminate' } }
    withLabel: soapdenovo2 { cpus = 24; memory = { (40.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((40.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (40.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in [134,137,138,139,140] ? 'retry' : task.exitStatus in 255 ? 'ignore' : 'terminate' } }
    withLabel: hisat2 { cpus = 24 ; memory = { (70.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((70.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (70.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in [1,134] ? 'retry' : 'terminate' } }
    withLabel: blast { cpus = 24; memory = { (800.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((800.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (800.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' } }
    withLabel: mmseqs2 { cpus = 24; memory = { (30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (30.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' } }
    withLabel: quast { cpus = 24; memory = { 30.GB } ; errorStrategy = { task.exitStatus in 4 ? 'ignore' : 'terminate' } }
    withLabel: mitos { cpus = 1; memory = { (30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (30.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' } }
    withLabel: multiqc { cpus = 1; memory = { (8.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((8.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (8.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' } }
    withLabel: cap3 { cpus = 1; memory = { (40.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((40.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (40.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' } }
    withLabel: megadepth { cpus = 1; memory = { (30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > (params.max_memory*2) ? 'terminate' : ((30.GB * (2**(task.attempt-1)) * params.memory_multiplier) > params.max_memory ? params.max_memory : (30.GB * (2**(task.attempt-1)) * params.memory_multiplier)) } ; maxRetries = 10 ; errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' } }
    withLabel: smallTask { cpus = 1 }
}
